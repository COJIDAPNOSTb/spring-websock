services:


  spring-websocket:
    image: spring-websocket:latest
    build: .
    restart: "no"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatspringwebsocket
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123qwe
    ports:
      - "8081:8080"


  postgres:
    image: postgres:17.5
    restart: "no"
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123qwe
      POSTGRES_DB: chatspringwebsocket
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5


  prometheus:
    image: prom/prometheus:v3.4.2
    restart: "no"
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5


  grafana:
    image: grafana/grafana:12.0.2
    restart: "no"
    ports:
      - "3001:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    healthcheck:
      test: curl --fail -s http://localhost:3000/api/health || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5



  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9099:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - db

  db:
    image: postgres:17.5
    container_name: sonar-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar


volumes:
  postgres_data: